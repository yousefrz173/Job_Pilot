import 'package:flutter/material.dart';
import 'package:jobpilot/core/utils/pref_utils.dart';
import 'package:jobpilot/core/utils/size_utils.dart';
import 'package:get/get.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
// The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };
// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    PrefUtils().setThemeData(_newTheme);
    Get.forceAppUpdate();
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
//throw exception to notify given theme is not found or not generated by the generatorif
    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
//throw exception to notify given theme is not found or not generated by the genera
    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.gray50,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(6),
          ),
          shadowColor: appTheme.indigo2002d,
          elevation: 4,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.onPrimary,
            width: 1,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.orange400;
          }
          return colorScheme.surface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.orange400;
          }
          return colorScheme.surface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.deepOrangeA100,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray300,
      ),
    );
  }

  ///Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray90002,
          fontSize: 16.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.blueGray70001,
          fontSize: 14.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray70001,
          fontSize: 12.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: Color(0XFF000000),
          fontSize: 40.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray90002,
          fontSize: 30.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: colorScheme.onPrimaryContainer,
          fontSize: 26.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray90004,
          fontSize: 12.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: colorScheme.onPrimaryContainer,
          fontSize: 10.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.orange400,
          fontSize: 8.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray90004,
          fontSize: 20.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray90004,
          fontSize: 16.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray90004,
          fontSize: 14.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
// Primary colors
    primary: Color(0XFF130160),
    primaryContainer: Color(0XFF3A3451),
    secondaryContainer: Color(0X3FB6BFC6),

// Error colors
    errorContainer: Color(0XFFF1728),
    onError: Color(0XFF140261),
    onErrorContainer: Color(0XFF03A9F4),

// On colors(text colors)
    onPrimary: Color(0XFF7551FF),
    onPrimaryContainer: Color(0XFFFFFFFF),
    onSecondaryContainer: Color(0XFF081D58),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
// Black
  Color get black900 => Color(0XFF000000);

// Blue
  Color get blue900 => Color(0XFF103793);

// BlueGray
  Color get blueGray100 => Color(0XFFCBC9D4);
  Color get blueGray10001 => Color(0XFFD0DBE0);
  Color get blueGray10002 => Color(0XFFCBC8D4);
  Color get blueGray20026 => Color(0X26ABC7D3);
  Color get blueGray300 => Color(0XFF9D97B4);
  Color get blueGray30001 => Color(0XFF9D97B5);
  Color get blueGray30002 => Color(0XFFA0A7B1);
  Color get blueGray30003 => Color(0XFFA9A5B8);
  Color get blueGray30004 => Color(0XFF9FA7B1);
  Color get blueGray30005 => Color(0XFFA49EB5);
  Color get blueGray30006 => Color(0XFFA39EB4);
  Color get blueGray400 => Color(0XFF8982A2);
  Color get blueGray40001 => Color(0XFF898989);
  Color get blueGray40002 => Color(0XFF888888);
  Color get blueGray500 => Color(0XFF60778C);
  Color get blueGray700 => Color(0XFF524B6C);
  Color get blueGray70001 => Color(0XFF514A6B);
  Color get blueGray70002 => Color(0XFF514A6C);
  Color get blueGray70087 => Color(0X874C3F7B);
  Color get blueGray800 => Color(0XFF3D4859);
  Color get blueGray80001 => Color(0XFF3E495A);
  Color get blueGray80002 => Color(0XFF3B4657);
  Color get blueGray900 => Color(0XFF232C3A);
  Color get blueGray90001 => Color(0XFF2C363B);
  Color get blueGray90002 => Color(0XFF333030);

// DeepOrange
  Color get deepOrange100 => Color(0XFFFFB2B2);
  Color get deepOrangeA100 => Color(0XFFFF9E87);
  Color get deepOrangeA200 => Color(0XFFFF6B2C);

// DeepPurple
  Color get deepPurple100 => Color(0XFFD6CCFE);
  Color get deepPurple10001 => Color(0XFFD6CDFE);
  Color get deepPurple50 => Color(0XFFE6E1FF);
  Color get deepPurpleA100 => Color(0XFFA993FF);
  Color get deepPurpleA10001 => Color(0XFFA992FF);
  Color get deepPurpleA700 => Color(0XFF3F13E4);

// Gray
  Color get gray100 => Color(0XFFF5F5F5);
  Color get gray10001 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFF2F1F1);
  Color get gray300 => Color(0XFFDDE1E6);
  Color get gray30001 => Color(0XFFDEE1E7);

  Color get gray30002 => Color(0XFFDCDCDC);
  Color get gray400 => Color(0XFFCCC3C1);
  Color get gray40001 => Color(0XFFC4C4C4);
  Color get gray40002 => Color(0XFFB5B6B7);
  Color get gray40003 => Color(0XFFB5B6B6);
  Color get gray50 => Color(0XFFF8F8F8);
  Color get gray500 => Color(0XFFAAAAAA);
  Color get gray5001 => Color(0XFFF8F8F9);
  Color get gray600 => Color(0XFF69687F);
  Color get gray60001 => Color(0XFF6F6A7F);
  Color get gray60002 => Color(0XFF6F6B80);
  Color get gray700 => Color(0XFF5B5858);
  Color get gray900 => Color(0XFF141414);
  Color get gray90001 => Color(0XFF150A3C);
  Color get gray90002 => Color(0XFF0D0140);
  Color get gray90003 => Color(0XFF150A33);
  Color get gray90004 => Color(0XFF150B3D);
  Color get gray90099 => Color(0X990D0040);

// Green
  Color get green500 => Color(0XFF4DC132);
  Color get greenA700 => Color(0XFF04B015);

// Indigo
  Color get indigo100 => Color(0XFFBEAFFE);
  Color get indigoA200 => Color(0XFF5665FF);
  Color get indigoA700 => Color(0XFF3847E5);
// Indigod
  Color get indigo2002d => Color(0X2D99AAC5);

// LightBlue
  Color get lightBlue100 => Color(0XFFAFECFE);

// Orange
  Color get orange100 => Color(0XFFFED5AD);
  Color get orange400 => Color(0XFFFF9228);
  Color get orangeA200 => Color(0XFFFFB237);
  Color get orangeA20001 => Color(0XFFFCA34D);

// Pink
  Color get pink400 => Color(0XFFE94D8A);

// Red
  Color get red300 => Color(0XFFED676A);
  Color get red700 => Color(0XFFE5252A);
  Color get red70001 => Color(0XFFED1C24);
  Color get redA100 => Color(0XFFFF8588);
  Color get redA200 => Color(0XFFFB4646);
  Color get redA20001 => Color(0XFFFF4B4B);
  Color get redA20002 => Color(0XFFFF4D46);
  Color get redA20003 => Color(0XFFFF464A);

// Teal
  Color get teal900 => Color(0XFF0C3548);

// White
  Color get whiteA700 => Color(0XFFFDFDFD);

// Yellow
  Color get yellow100 => Color(0XFFFFEACC);
  Color get yellowA70087 => Color(0X87FFD500);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
